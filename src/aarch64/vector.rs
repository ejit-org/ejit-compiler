//! This file has been generated by eji-build DO NOT EDIT
//! Update asm/vector.c instead
//! 
use crate::{Cond, Error, Executable, Ins, Type, Vsize, R, V};
use super::{vgen2, vgen3, vgenmem};

pub fn gen_vector_aarch64(code: &mut Vec<u8>, i: &Ins) -> Result<(), Error> {
    use Type::*;
    use Vsize::*;
    use Ins::*;
    match i {
        Vnot(S8, V64, dest, src) => vgen2(code, 0x2e205800, dest, src, &i), //    0:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(U8, V64, dest, src) => vgen2(code, 0x2e205800, dest, src, &i), //    8:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(S16, V64, dest, src) => vgen2(code, 0x2e205800, dest, src, &i), //   10:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(U16, V64, dest, src) => vgen2(code, 0x2e205800, dest, src, &i), //   18:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(S32, V64, dest, src) => vgen2(code, 0x2e205800, dest, src, &i), //   20:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(U32, V64, dest, src) => vgen2(code, 0x2e205800, dest, src, &i), //   28:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(S64, V64, dest, src) => vgen2(code, 0x2e205800, dest, src, &i), //   30:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(U64, V64, dest, src) => vgen2(code, 0x2e205800, dest, src, &i), //   38:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(S8, V128, dest, src) => vgen2(code, 0x6e205800, dest, src, &i), //   40:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(U8, V128, dest, src) => vgen2(code, 0x6e205800, dest, src, &i), //   48:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(S16, V128, dest, src) => vgen2(code, 0x6e205800, dest, src, &i), //   50:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(U16, V128, dest, src) => vgen2(code, 0x6e205800, dest, src, &i), //   58:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(S32, V128, dest, src) => vgen2(code, 0x6e205800, dest, src, &i), //   60:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(U32, V128, dest, src) => vgen2(code, 0x6e205800, dest, src, &i), //   68:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(S64, V128, dest, src) => vgen2(code, 0x6e205800, dest, src, &i), //   70:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(U64, V128, dest, src) => vgen2(code, 0x6e205800, dest, src, &i), //   78:	6e205800 	mvn	v0.16b, v0.16b
        Vneg(F32, V32, dest, src) => vgen2(code, 0x1e214000, dest, src, &i), //   80:	1e214000 	fneg	s0, s0
        Vneg(S8, V64, dest, src) => vgen2(code, 0x2e20b800, dest, src, &i), //   88:	2e20b800 	neg	v0.8b, v0.8b
        Vneg(U8, V64, dest, src) => vgen2(code, 0x2e20b800, dest, src, &i), //   90:	2e20b800 	neg	v0.8b, v0.8b
        Vneg(S16, V64, dest, src) => vgen2(code, 0x2e60b800, dest, src, &i), //   98:	2e60b800 	neg	v0.4h, v0.4h
        Vneg(U16, V64, dest, src) => vgen2(code, 0x2e60b800, dest, src, &i), //   a0:	2e60b800 	neg	v0.4h, v0.4h
        Vneg(S32, V64, dest, src) => vgen2(code, 0x2ea0b800, dest, src, &i), //   a8:	2ea0b800 	neg	v0.2s, v0.2s
        Vneg(U32, V64, dest, src) => vgen2(code, 0x2ea0b800, dest, src, &i), //   b0:	2ea0b800 	neg	v0.2s, v0.2s
        Vneg(S64, V64, dest, src) => vgen2(code, 0x7ee0b800, dest, src, &i), //   b8:	7ee0b800 	neg	d0, d0
        Vneg(U64, V64, dest, src) => vgen2(code, 0x7ee0b800, dest, src, &i), //   c0:	7ee0b800 	neg	d0, d0
        Vneg(F32, V64, dest, src) => vgen2(code, 0x2ea0f800, dest, src, &i), //  118:	2ea0f800 	fneg	v0.2s, v0.2s
        Vneg(F64, V64, dest, src) => vgen2(code, 0x1e614000, dest, src, &i), //  120:	1e614000 	fneg	d0, d0
        Vneg(S8, V128, dest, src) => vgen2(code, 0x6e20b800, dest, src, &i), //  128:	6e20b800 	neg	v0.16b, v0.16b
        Vneg(U8, V128, dest, src) => vgen2(code, 0x6e20b800, dest, src, &i), //  130:	6e20b800 	neg	v0.16b, v0.16b
        Vneg(S16, V128, dest, src) => vgen2(code, 0x6e60b800, dest, src, &i), //  138:	6e60b800 	neg	v0.8h, v0.8h
        Vneg(U16, V128, dest, src) => vgen2(code, 0x6e60b800, dest, src, &i), //  140:	6e60b800 	neg	v0.8h, v0.8h
        Vneg(S32, V128, dest, src) => vgen2(code, 0x6ea0b800, dest, src, &i), //  148:	6ea0b800 	neg	v0.4s, v0.4s
        Vneg(U32, V128, dest, src) => vgen2(code, 0x6ea0b800, dest, src, &i), //  150:	6ea0b800 	neg	v0.4s, v0.4s
        Vneg(S64, V128, dest, src) => vgen2(code, 0x6ee0b800, dest, src, &i), //  158:	6ee0b800 	neg	v0.2d, v0.2d
        Vneg(U64, V128, dest, src) => vgen2(code, 0x6ee0b800, dest, src, &i), //  160:	6ee0b800 	neg	v0.2d, v0.2d
        Vneg(F32, V128, dest, src) => vgen2(code, 0x6ea0f800, dest, src, &i), //  168:	6ea0f800 	fneg	v0.4s, v0.4s
        Vneg(F64, V128, dest, src) => vgen2(code, 0x6ee0f800, dest, src, &i), //  170:	6ee0f800 	fneg	v0.2d, v0.2d
        Vmov(F32, V32, dest, src) => vgen2(code, 0x1e204020, dest, src, &i), //  178:	1e204020 	fmov	s0, s1
        Vmov(S8, V64, dest, src) => vgen2(code, 0x0ea11c20, dest, src, &i), //  180:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(U8, V64, dest, src) => vgen2(code, 0x0ea11c20, dest, src, &i), //  188:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(S16, V64, dest, src) => vgen2(code, 0x0ea11c20, dest, src, &i), //  190:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(U16, V64, dest, src) => vgen2(code, 0x0ea11c20, dest, src, &i), //  198:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(S32, V64, dest, src) => vgen2(code, 0x0ea11c20, dest, src, &i), //  1a0:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(U32, V64, dest, src) => vgen2(code, 0x0ea11c20, dest, src, &i), //  1a8:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(S64, V64, dest, src) => vgen2(code, 0x1e604020, dest, src, &i), //  1b0:	1e604020 	fmov	d0, d1
        Vmov(U64, V64, dest, src) => vgen2(code, 0x1e604020, dest, src, &i), //  1b8:	1e604020 	fmov	d0, d1
        Vmov(F32, V64, dest, src) => vgen2(code, 0x0ea11c20, dest, src, &i), //  1c0:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(F64, V64, dest, src) => vgen2(code, 0x1e604020, dest, src, &i), //  1c8:	1e604020 	fmov	d0, d1
        Vmov(S8, V128, dest, src) => vgen2(code, 0x4ea11c20, dest, src, &i), //  1d0:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(U8, V128, dest, src) => vgen2(code, 0x4ea11c20, dest, src, &i), //  1d8:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(S16, V128, dest, src) => vgen2(code, 0x4ea11c20, dest, src, &i), //  1e0:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(U16, V128, dest, src) => vgen2(code, 0x4ea11c20, dest, src, &i), //  1e8:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(S32, V128, dest, src) => vgen2(code, 0x4ea11c20, dest, src, &i), //  1f0:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(U32, V128, dest, src) => vgen2(code, 0x4ea11c20, dest, src, &i), //  1f8:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(S64, V128, dest, src) => vgen2(code, 0x4ea11c20, dest, src, &i), //  200:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(U64, V128, dest, src) => vgen2(code, 0x4ea11c20, dest, src, &i), //  208:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(F32, V128, dest, src) => vgen2(code, 0x4ea11c20, dest, src, &i), //  210:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(F64, V128, dest, src) => vgen2(code, 0x4ea11c20, dest, src, &i), //  218:	4ea11c20 	mov	v0.16b, v1.16b
        Vadd(F32, V32, dest, src1, src2) => vgen3(code, 0x1e212800, dest, src1, src2, &i), //  220:	1e212800 	fadd	s0, s0, s1
        Vadd(S8, V64, dest, src1, src2) => vgen3(code, 0x0e218400, dest, src1, src2, &i), //  228:	0e218400 	add	v0.8b, v0.8b, v1.8b
        Vadd(U8, V64, dest, src1, src2) => vgen3(code, 0x0e218400, dest, src1, src2, &i), //  230:	0e218400 	add	v0.8b, v0.8b, v1.8b
        Vadd(S16, V64, dest, src1, src2) => vgen3(code, 0x0e618400, dest, src1, src2, &i), //  238:	0e618400 	add	v0.4h, v0.4h, v1.4h
        Vadd(U16, V64, dest, src1, src2) => vgen3(code, 0x0e618400, dest, src1, src2, &i), //  240:	0e618400 	add	v0.4h, v0.4h, v1.4h
        Vadd(S32, V64, dest, src1, src2) => vgen3(code, 0x0ea18400, dest, src1, src2, &i), //  248:	0ea18400 	add	v0.2s, v0.2s, v1.2s
        Vadd(U32, V64, dest, src1, src2) => vgen3(code, 0x0ea18400, dest, src1, src2, &i), //  250:	0ea18400 	add	v0.2s, v0.2s, v1.2s
        Vadd(S64, V64, dest, src1, src2) => vgen3(code, 0x5ee18400, dest, src1, src2, &i), //  258:	5ee18400 	add	d0, d0, d1
        Vadd(U64, V64, dest, src1, src2) => vgen3(code, 0x5ee18400, dest, src1, src2, &i), //  260:	5ee18400 	add	d0, d0, d1
        Vadd(F32, V64, dest, src1, src2) => vgen3(code, 0x0e21d400, dest, src1, src2, &i), //  268:	0e21d400 	fadd	v0.2s, v0.2s, v1.2s
        Vadd(F64, V64, dest, src1, src2) => vgen3(code, 0x1e612800, dest, src1, src2, &i), //  270:	1e612800 	fadd	d0, d0, d1
        Vadd(S8, V128, dest, src1, src2) => vgen3(code, 0x4e218400, dest, src1, src2, &i), //  278:	4e218400 	add	v0.16b, v0.16b, v1.16b
        Vadd(U8, V128, dest, src1, src2) => vgen3(code, 0x4e218400, dest, src1, src2, &i), //  280:	4e218400 	add	v0.16b, v0.16b, v1.16b
        Vadd(S16, V128, dest, src1, src2) => vgen3(code, 0x4e618400, dest, src1, src2, &i), //  288:	4e618400 	add	v0.8h, v0.8h, v1.8h
        Vadd(U16, V128, dest, src1, src2) => vgen3(code, 0x4e618400, dest, src1, src2, &i), //  290:	4e618400 	add	v0.8h, v0.8h, v1.8h
        Vadd(S32, V128, dest, src1, src2) => vgen3(code, 0x4ea18400, dest, src1, src2, &i), //  298:	4ea18400 	add	v0.4s, v0.4s, v1.4s
        Vadd(U32, V128, dest, src1, src2) => vgen3(code, 0x4ea18400, dest, src1, src2, &i), //  2a0:	4ea18400 	add	v0.4s, v0.4s, v1.4s
        Vadd(S64, V128, dest, src1, src2) => vgen3(code, 0x4ee18400, dest, src1, src2, &i), //  2a8:	4ee18400 	add	v0.2d, v0.2d, v1.2d
        Vadd(U64, V128, dest, src1, src2) => vgen3(code, 0x4ee18400, dest, src1, src2, &i), //  2b0:	4ee18400 	add	v0.2d, v0.2d, v1.2d
        Vadd(F32, V128, dest, src1, src2) => vgen3(code, 0x4e21d400, dest, src1, src2, &i), //  2b8:	4e21d400 	fadd	v0.4s, v0.4s, v1.4s
        Vadd(F64, V128, dest, src1, src2) => vgen3(code, 0x4e61d400, dest, src1, src2, &i), //  2c0:	4e61d400 	fadd	v0.2d, v0.2d, v1.2d
        Vsub(F32, V32, dest, src1, src2) => vgen3(code, 0x1e213800, dest, src1, src2, &i), //  2c8:	1e213800 	fsub	s0, s0, s1
        Vsub(S8, V64, dest, src1, src2) => vgen3(code, 0x2e218400, dest, src1, src2, &i), //  2d0:	2e218400 	sub	v0.8b, v0.8b, v1.8b
        Vsub(U8, V64, dest, src1, src2) => vgen3(code, 0x2e218400, dest, src1, src2, &i), //  2d8:	2e218400 	sub	v0.8b, v0.8b, v1.8b
        Vsub(S16, V64, dest, src1, src2) => vgen3(code, 0x2e618400, dest, src1, src2, &i), //  2e0:	2e618400 	sub	v0.4h, v0.4h, v1.4h
        Vsub(U16, V64, dest, src1, src2) => vgen3(code, 0x2e618400, dest, src1, src2, &i), //  2e8:	2e618400 	sub	v0.4h, v0.4h, v1.4h
        Vsub(S32, V64, dest, src1, src2) => vgen3(code, 0x2ea18400, dest, src1, src2, &i), //  2f0:	2ea18400 	sub	v0.2s, v0.2s, v1.2s
        Vsub(U32, V64, dest, src1, src2) => vgen3(code, 0x2ea18400, dest, src1, src2, &i), //  2f8:	2ea18400 	sub	v0.2s, v0.2s, v1.2s
        Vsub(S64, V64, dest, src1, src2) => vgen3(code, 0x7ee18400, dest, src1, src2, &i), //  300:	7ee18400 	sub	d0, d0, d1
        Vsub(U64, V64, dest, src1, src2) => vgen3(code, 0x7ee18400, dest, src1, src2, &i), //  308:	7ee18400 	sub	d0, d0, d1
        Vsub(F32, V64, dest, src1, src2) => vgen3(code, 0x0ea1d400, dest, src1, src2, &i), //  310:	0ea1d400 	fsub	v0.2s, v0.2s, v1.2s
        Vsub(F64, V64, dest, src1, src2) => vgen3(code, 0x1e613800, dest, src1, src2, &i), //  318:	1e613800 	fsub	d0, d0, d1
        Vsub(S8, V128, dest, src1, src2) => vgen3(code, 0x6e218400, dest, src1, src2, &i), //  320:	6e218400 	sub	v0.16b, v0.16b, v1.16b
        Vsub(U8, V128, dest, src1, src2) => vgen3(code, 0x6e218400, dest, src1, src2, &i), //  328:	6e218400 	sub	v0.16b, v0.16b, v1.16b
        Vsub(S16, V128, dest, src1, src2) => vgen3(code, 0x6e618400, dest, src1, src2, &i), //  330:	6e618400 	sub	v0.8h, v0.8h, v1.8h
        Vsub(U16, V128, dest, src1, src2) => vgen3(code, 0x6e618400, dest, src1, src2, &i), //  338:	6e618400 	sub	v0.8h, v0.8h, v1.8h
        Vsub(S32, V128, dest, src1, src2) => vgen3(code, 0x6ea18400, dest, src1, src2, &i), //  340:	6ea18400 	sub	v0.4s, v0.4s, v1.4s
        Vsub(U32, V128, dest, src1, src2) => vgen3(code, 0x6ea18400, dest, src1, src2, &i), //  348:	6ea18400 	sub	v0.4s, v0.4s, v1.4s
        Vsub(S64, V128, dest, src1, src2) => vgen3(code, 0x6ee18400, dest, src1, src2, &i), //  350:	6ee18400 	sub	v0.2d, v0.2d, v1.2d
        Vsub(U64, V128, dest, src1, src2) => vgen3(code, 0x6ee18400, dest, src1, src2, &i), //  358:	6ee18400 	sub	v0.2d, v0.2d, v1.2d
        Vsub(F32, V128, dest, src1, src2) => vgen3(code, 0x4ea1d400, dest, src1, src2, &i), //  360:	4ea1d400 	fsub	v0.4s, v0.4s, v1.4s
        Vsub(F64, V128, dest, src1, src2) => vgen3(code, 0x4ee1d400, dest, src1, src2, &i), //  368:	4ee1d400 	fsub	v0.2d, v0.2d, v1.2d
        Vmul(F32, V32, dest, src1, src2) => vgen3(code, 0x1e210800, dest, src1, src2, &i), //  370:	1e210800 	fmul	s0, s0, s1
        Vmul(S8, V64, dest, src1, src2) => vgen3(code, 0x0e219c00, dest, src1, src2, &i), //  378:	0e219c00 	mul	v0.8b, v0.8b, v1.8b
        Vmul(U8, V64, dest, src1, src2) => vgen3(code, 0x0e219c00, dest, src1, src2, &i), //  380:	0e219c00 	mul	v0.8b, v0.8b, v1.8b
        Vmul(S16, V64, dest, src1, src2) => vgen3(code, 0x0e619c00, dest, src1, src2, &i), //  388:	0e619c00 	mul	v0.4h, v0.4h, v1.4h
        Vmul(U16, V64, dest, src1, src2) => vgen3(code, 0x0e619c00, dest, src1, src2, &i), //  390:	0e619c00 	mul	v0.4h, v0.4h, v1.4h
        Vmul(S32, V64, dest, src1, src2) => vgen3(code, 0x0ea19c00, dest, src1, src2, &i), //  398:	0ea19c00 	mul	v0.2s, v0.2s, v1.2s
        Vmul(U32, V64, dest, src1, src2) => vgen3(code, 0x0ea19c00, dest, src1, src2, &i), //  3a0:	0ea19c00 	mul	v0.2s, v0.2s, v1.2s
        Vmul(F32, V64, dest, src1, src2) => vgen3(code, 0x2e21dc00, dest, src1, src2, &i), //  3d0:	2e21dc00 	fmul	v0.2s, v0.2s, v1.2s
        Vmul(F64, V64, dest, src1, src2) => vgen3(code, 0x1e610800, dest, src1, src2, &i), //  3d8:	1e610800 	fmul	d0, d0, d1
        Vmul(S8, V128, dest, src1, src2) => vgen3(code, 0x4e219c00, dest, src1, src2, &i), //  3e0:	4e219c00 	mul	v0.16b, v0.16b, v1.16b
        Vmul(U8, V128, dest, src1, src2) => vgen3(code, 0x4e219c00, dest, src1, src2, &i), //  3e8:	4e219c00 	mul	v0.16b, v0.16b, v1.16b
        Vmul(S16, V128, dest, src1, src2) => vgen3(code, 0x4e619c00, dest, src1, src2, &i), //  3f0:	4e619c00 	mul	v0.8h, v0.8h, v1.8h
        Vmul(U16, V128, dest, src1, src2) => vgen3(code, 0x4e619c00, dest, src1, src2, &i), //  3f8:	4e619c00 	mul	v0.8h, v0.8h, v1.8h
        Vmul(S32, V128, dest, src1, src2) => vgen3(code, 0x4ea19c00, dest, src1, src2, &i), //  400:	4ea19c00 	mul	v0.4s, v0.4s, v1.4s
        Vmul(U32, V128, dest, src1, src2) => vgen3(code, 0x4ea19c00, dest, src1, src2, &i), //  408:	4ea19c00 	mul	v0.4s, v0.4s, v1.4s
        Vmul(F32, V128, dest, src1, src2) => vgen3(code, 0x6e21dc00, dest, src1, src2, &i), //  458:	6e21dc00 	fmul	v0.4s, v0.4s, v1.4s
        Vmul(F64, V128, dest, src1, src2) => vgen3(code, 0x6e61dc00, dest, src1, src2, &i), //  460:	6e61dc00 	fmul	v0.2d, v0.2d, v1.2d
        Vdiv(F32, V32, dest, src1, src2) => vgen3(code, 0x1e211800, dest, src1, src2, &i), //  468:	1e211800 	fdiv	s0, s0, s1
        Vdiv(F32, V64, dest, src1, src2) => vgen3(code, 0x2e21fc00, dest, src1, src2, &i), //  670:	2e21fc00 	fdiv	v0.2s, v0.2s, v1.2s
        Vdiv(F64, V64, dest, src1, src2) => vgen3(code, 0x1e611800, dest, src1, src2, &i), //  678:	1e611800 	fdiv	d0, d0, d1
        Vdiv(F32, V128, dest, src1, src2) => vgen3(code, 0x6e21fc00, dest, src1, src2, &i), //  a78:	6e21fc00 	fdiv	v0.4s, v0.4s, v1.4s
        Vdiv(F64, V128, dest, src1, src2) => vgen3(code, 0x6e61fc00, dest, src1, src2, &i), //  a80:	6e61fc00 	fdiv	v0.2d, v0.2d, v1.2d
        Vand(S8, V64, dest, src1, src2) => vgen3(code, 0x0e211c00, dest, src1, src2, &i), //  a88:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(U8, V64, dest, src1, src2) => vgen3(code, 0x0e211c00, dest, src1, src2, &i), //  a90:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(S16, V64, dest, src1, src2) => vgen3(code, 0x0e211c00, dest, src1, src2, &i), //  a98:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(U16, V64, dest, src1, src2) => vgen3(code, 0x0e211c00, dest, src1, src2, &i), //  aa0:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(S32, V64, dest, src1, src2) => vgen3(code, 0x0e211c00, dest, src1, src2, &i), //  aa8:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(U32, V64, dest, src1, src2) => vgen3(code, 0x0e211c00, dest, src1, src2, &i), //  ab0:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(S64, V64, dest, src1, src2) => vgen3(code, 0x0e211c00, dest, src1, src2, &i), //  ab8:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(U64, V64, dest, src1, src2) => vgen3(code, 0x0e211c00, dest, src1, src2, &i), //  ac0:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(S8, V128, dest, src1, src2) => vgen3(code, 0x4e211c00, dest, src1, src2, &i), //  ac8:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(U8, V128, dest, src1, src2) => vgen3(code, 0x4e211c00, dest, src1, src2, &i), //  ad0:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(S16, V128, dest, src1, src2) => vgen3(code, 0x4e211c00, dest, src1, src2, &i), //  ad8:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(U16, V128, dest, src1, src2) => vgen3(code, 0x4e211c00, dest, src1, src2, &i), //  ae0:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(S32, V128, dest, src1, src2) => vgen3(code, 0x4e211c00, dest, src1, src2, &i), //  ae8:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(U32, V128, dest, src1, src2) => vgen3(code, 0x4e211c00, dest, src1, src2, &i), //  af0:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(S64, V128, dest, src1, src2) => vgen3(code, 0x4e211c00, dest, src1, src2, &i), //  af8:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(U64, V128, dest, src1, src2) => vgen3(code, 0x4e211c00, dest, src1, src2, &i), //  b00:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vor(S8, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00, dest, src1, src2, &i), //  b08:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(U8, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00, dest, src1, src2, &i), //  b10:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(S16, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00, dest, src1, src2, &i), //  b18:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(U16, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00, dest, src1, src2, &i), //  b20:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(S32, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00, dest, src1, src2, &i), //  b28:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(U32, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00, dest, src1, src2, &i), //  b30:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(S64, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00, dest, src1, src2, &i), //  b38:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(U64, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00, dest, src1, src2, &i), //  b40:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(S8, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00, dest, src1, src2, &i), //  b48:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(U8, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00, dest, src1, src2, &i), //  b50:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(S16, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00, dest, src1, src2, &i), //  b58:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(U16, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00, dest, src1, src2, &i), //  b60:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(S32, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00, dest, src1, src2, &i), //  b68:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(U32, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00, dest, src1, src2, &i), //  b70:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(S64, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00, dest, src1, src2, &i), //  b78:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(U64, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00, dest, src1, src2, &i), //  b80:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vxor(S8, V64, dest, src1, src2) => vgen3(code, 0x2e211c00, dest, src1, src2, &i), //  b88:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(U8, V64, dest, src1, src2) => vgen3(code, 0x2e211c00, dest, src1, src2, &i), //  b90:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(S16, V64, dest, src1, src2) => vgen3(code, 0x2e211c00, dest, src1, src2, &i), //  b98:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(U16, V64, dest, src1, src2) => vgen3(code, 0x2e211c00, dest, src1, src2, &i), //  ba0:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(S32, V64, dest, src1, src2) => vgen3(code, 0x2e211c00, dest, src1, src2, &i), //  ba8:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(U32, V64, dest, src1, src2) => vgen3(code, 0x2e211c00, dest, src1, src2, &i), //  bb0:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(S64, V64, dest, src1, src2) => vgen3(code, 0x2e211c00, dest, src1, src2, &i), //  bb8:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(U64, V64, dest, src1, src2) => vgen3(code, 0x2e211c00, dest, src1, src2, &i), //  bc0:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(S8, V128, dest, src1, src2) => vgen3(code, 0x6e211c00, dest, src1, src2, &i), //  bc8:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(U8, V128, dest, src1, src2) => vgen3(code, 0x6e211c00, dest, src1, src2, &i), //  bd0:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(S16, V128, dest, src1, src2) => vgen3(code, 0x6e211c00, dest, src1, src2, &i), //  bd8:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(U16, V128, dest, src1, src2) => vgen3(code, 0x6e211c00, dest, src1, src2, &i), //  be0:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(S32, V128, dest, src1, src2) => vgen3(code, 0x6e211c00, dest, src1, src2, &i), //  be8:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(U32, V128, dest, src1, src2) => vgen3(code, 0x6e211c00, dest, src1, src2, &i), //  bf0:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(S64, V128, dest, src1, src2) => vgen3(code, 0x6e211c00, dest, src1, src2, &i), //  bf8:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(U64, V128, dest, src1, src2) => vgen3(code, 0x6e211c00, dest, src1, src2, &i), //  c00:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vshl(S8, V64, dest, src1, src2) => vgen3(code, 0x0e214400, dest, src1, src2, &i), //  c08:	0e214400 	sshl	v0.8b, v0.8b, v1.8b
        Vshl(U8, V64, dest, src1, src2) => vgen3(code, 0x0e214400, dest, src1, src2, &i), //  c10:	0e214400 	sshl	v0.8b, v0.8b, v1.8b
        Vshl(S16, V64, dest, src1, src2) => vgen3(code, 0x0e614400, dest, src1, src2, &i), //  c18:	0e614400 	sshl	v0.4h, v0.4h, v1.4h
        Vshl(U16, V64, dest, src1, src2) => vgen3(code, 0x0e614400, dest, src1, src2, &i), //  c20:	0e614400 	sshl	v0.4h, v0.4h, v1.4h
        Vshl(S32, V64, dest, src1, src2) => vgen3(code, 0x0ea14400, dest, src1, src2, &i), //  c28:	0ea14400 	sshl	v0.2s, v0.2s, v1.2s
        Vshl(U32, V64, dest, src1, src2) => vgen3(code, 0x0ea14400, dest, src1, src2, &i), //  c30:	0ea14400 	sshl	v0.2s, v0.2s, v1.2s
        Vshl(S64, V64, dest, src1, src2) => vgen3(code, 0x7ee14400, dest, src1, src2, &i), //  c38:	7ee14400 	ushl	d0, d0, d1
        Vshl(U64, V64, dest, src1, src2) => vgen3(code, 0x7ee14400, dest, src1, src2, &i), //  c40:	7ee14400 	ushl	d0, d0, d1
        Vshl(S8, V128, dest, src1, src2) => vgen3(code, 0x4e214400, dest, src1, src2, &i), //  c48:	4e214400 	sshl	v0.16b, v0.16b, v1.16b
        Vshl(U8, V128, dest, src1, src2) => vgen3(code, 0x4e214400, dest, src1, src2, &i), //  c50:	4e214400 	sshl	v0.16b, v0.16b, v1.16b
        Vshl(S16, V128, dest, src1, src2) => vgen3(code, 0x4e614400, dest, src1, src2, &i), //  c58:	4e614400 	sshl	v0.8h, v0.8h, v1.8h
        Vshl(U16, V128, dest, src1, src2) => vgen3(code, 0x4e614400, dest, src1, src2, &i), //  c60:	4e614400 	sshl	v0.8h, v0.8h, v1.8h
        Vshl(S32, V128, dest, src1, src2) => vgen3(code, 0x4ea14400, dest, src1, src2, &i), //  c68:	4ea14400 	sshl	v0.4s, v0.4s, v1.4s
        Vshl(U32, V128, dest, src1, src2) => vgen3(code, 0x4ea14400, dest, src1, src2, &i), //  c70:	4ea14400 	sshl	v0.4s, v0.4s, v1.4s
        Vshl(S64, V128, dest, src1, src2) => vgen3(code, 0x4ee14400, dest, src1, src2, &i), //  c78:	4ee14400 	sshl	v0.2d, v0.2d, v1.2d
        Vshl(U64, V128, dest, src1, src2) => vgen3(code, 0x4ee14400, dest, src1, src2, &i), //  c80:	4ee14400 	sshl	v0.2d, v0.2d, v1.2d
        Vst(F32, V32, v, r, imm) => vgenmem(code, 0xbc001000, v, r, imm, &i), //  d50:	bc001000 	stur	s0, [x0, #1]
        Vst(S8, V64, v, r, imm) => vgenmem(code, 0xfc001000, v, r, imm, &i), //  d58:	fc001000 	stur	d0, [x0, #1]
        Vst(U8, V64, v, r, imm) => vgenmem(code, 0xfc001000, v, r, imm, &i), //  d60:	fc001000 	stur	d0, [x0, #1]
        Vst(S16, V64, v, r, imm) => vgenmem(code, 0xfc001000, v, r, imm, &i), //  d68:	fc001000 	stur	d0, [x0, #1]
        Vst(U16, V64, v, r, imm) => vgenmem(code, 0xfc001000, v, r, imm, &i), //  d70:	fc001000 	stur	d0, [x0, #1]
        Vst(S32, V64, v, r, imm) => vgenmem(code, 0xfc001000, v, r, imm, &i), //  d78:	fc001000 	stur	d0, [x0, #1]
        Vst(U32, V64, v, r, imm) => vgenmem(code, 0xfc001000, v, r, imm, &i), //  d80:	fc001000 	stur	d0, [x0, #1]
        Vst(S64, V64, v, r, imm) => vgenmem(code, 0xfc001000, v, r, imm, &i), //  d88:	fc001000 	stur	d0, [x0, #1]
        Vst(U64, V64, v, r, imm) => vgenmem(code, 0xfc001000, v, r, imm, &i), //  d90:	fc001000 	stur	d0, [x0, #1]
        Vst(F32, V64, v, r, imm) => vgenmem(code, 0xfc001000, v, r, imm, &i), //  d98:	fc001000 	stur	d0, [x0, #1]
        Vst(F64, V64, v, r, imm) => vgenmem(code, 0xfc001000, v, r, imm, &i), //  da0:	fc001000 	stur	d0, [x0, #1]
        Vst(S8, V128, v, r, imm) => vgenmem(code, 0x3c801000, v, r, imm, &i), //  da8:	3c801000 	stur	q0, [x0, #1]
        Vst(U8, V128, v, r, imm) => vgenmem(code, 0x3c801000, v, r, imm, &i), //  db0:	3c801000 	stur	q0, [x0, #1]
        Vst(S16, V128, v, r, imm) => vgenmem(code, 0x3c801000, v, r, imm, &i), //  db8:	3c801000 	stur	q0, [x0, #1]
        Vst(U16, V128, v, r, imm) => vgenmem(code, 0x3c801000, v, r, imm, &i), //  dc0:	3c801000 	stur	q0, [x0, #1]
        Vst(S32, V128, v, r, imm) => vgenmem(code, 0x3c801000, v, r, imm, &i), //  dc8:	3c801000 	stur	q0, [x0, #1]
        Vst(U32, V128, v, r, imm) => vgenmem(code, 0x3c801000, v, r, imm, &i), //  dd0:	3c801000 	stur	q0, [x0, #1]
        Vst(S64, V128, v, r, imm) => vgenmem(code, 0x3c801000, v, r, imm, &i), //  dd8:	3c801000 	stur	q0, [x0, #1]
        Vst(U64, V128, v, r, imm) => vgenmem(code, 0x3c801000, v, r, imm, &i), //  de0:	3c801000 	stur	q0, [x0, #1]
        Vst(F32, V128, v, r, imm) => vgenmem(code, 0x3c801000, v, r, imm, &i), //  de8:	3c801000 	stur	q0, [x0, #1]
        Vst(F64, V128, v, r, imm) => vgenmem(code, 0x3c801000, v, r, imm, &i), //  df0:	3c801000 	stur	q0, [x0, #1]
        Vld(F32, V32, v, r, imm) => vgenmem(code, 0xbc401000, v, r, imm, &i), //  df8:	bc401000 	ldur	s0, [x0, #1]
        Vld(S8, V64, v, r, imm) => vgenmem(code, 0xfc401000, v, r, imm, &i), //  e00:	fc401000 	ldur	d0, [x0, #1]
        Vld(U8, V64, v, r, imm) => vgenmem(code, 0xfc401000, v, r, imm, &i), //  e08:	fc401000 	ldur	d0, [x0, #1]
        Vld(S16, V64, v, r, imm) => vgenmem(code, 0xfc401000, v, r, imm, &i), //  e10:	fc401000 	ldur	d0, [x0, #1]
        Vld(U16, V64, v, r, imm) => vgenmem(code, 0xfc401000, v, r, imm, &i), //  e18:	fc401000 	ldur	d0, [x0, #1]
        Vld(S32, V64, v, r, imm) => vgenmem(code, 0xfc401000, v, r, imm, &i), //  e20:	fc401000 	ldur	d0, [x0, #1]
        Vld(U32, V64, v, r, imm) => vgenmem(code, 0xfc401000, v, r, imm, &i), //  e28:	fc401000 	ldur	d0, [x0, #1]
        Vld(S64, V64, v, r, imm) => vgenmem(code, 0xfc401000, v, r, imm, &i), //  e30:	fc401000 	ldur	d0, [x0, #1]
        Vld(U64, V64, v, r, imm) => vgenmem(code, 0xfc401000, v, r, imm, &i), //  e38:	fc401000 	ldur	d0, [x0, #1]
        Vld(F32, V64, v, r, imm) => vgenmem(code, 0xfc401000, v, r, imm, &i), //  e40:	fc401000 	ldur	d0, [x0, #1]
        Vld(F64, V64, v, r, imm) => vgenmem(code, 0xfc401000, v, r, imm, &i), //  e48:	fc401000 	ldur	d0, [x0, #1]
        Vld(S8, V128, v, r, imm) => vgenmem(code, 0x3cc01000, v, r, imm, &i), //  e50:	3cc01000 	ldur	q0, [x0, #1]
        Vld(U8, V128, v, r, imm) => vgenmem(code, 0x3cc01000, v, r, imm, &i), //  e58:	3cc01000 	ldur	q0, [x0, #1]
        Vld(S16, V128, v, r, imm) => vgenmem(code, 0x3cc01000, v, r, imm, &i), //  e60:	3cc01000 	ldur	q0, [x0, #1]
        Vld(U16, V128, v, r, imm) => vgenmem(code, 0x3cc01000, v, r, imm, &i), //  e68:	3cc01000 	ldur	q0, [x0, #1]
        Vld(S32, V128, v, r, imm) => vgenmem(code, 0x3cc01000, v, r, imm, &i), //  e70:	3cc01000 	ldur	q0, [x0, #1]
        Vld(U32, V128, v, r, imm) => vgenmem(code, 0x3cc01000, v, r, imm, &i), //  e78:	3cc01000 	ldur	q0, [x0, #1]
        Vld(S64, V128, v, r, imm) => vgenmem(code, 0x3cc01000, v, r, imm, &i), //  e80:	3cc01000 	ldur	q0, [x0, #1]
        Vld(U64, V128, v, r, imm) => vgenmem(code, 0x3cc01000, v, r, imm, &i), //  e88:	3cc01000 	ldur	q0, [x0, #1]
        Vld(F32, V128, v, r, imm) => vgenmem(code, 0x3cc01000, v, r, imm, &i), //  e90:	3cc01000 	ldur	q0, [x0, #1]
        Vld(F64, V128, v, r, imm) => vgenmem(code, 0x3cc01000, v, r, imm, &i), //  e98:	3cc01000 	ldur	q0, [x0, #1]
        Vrecpe(F32, V32, dest, src) => vgen2(code, 0x5ea1d800, dest, src, &i), //  ea0:	5ea1d800 	frecpe	s0, s0
        Vrecpe(F64, V64, dest, src) => vgen2(code, 0x5ee1d800, dest, src, &i), //  ea8:	5ee1d800 	frecpe	d0, d0
        Vrecpe(F32, V64, dest, src) => vgen2(code, 0x0ea1d800, dest, src, &i), //  eb0:	0ea1d800 	frecpe	v0.2s, v0.2s
        Vrecpe(F32, V128, dest, src) => vgen2(code, 0x4ea1d800, dest, src, &i), //  eb8:	4ea1d800 	frecpe	v0.4s, v0.4s
        Vrecpe(F64, V128, dest, src) => vgen2(code, 0x4ee1d800, dest, src, &i), //  ec0:	4ee1d800 	frecpe	v0.2d, v0.2d
        Vrsqrte(F32, V32, dest, src) => vgen2(code, 0x7ea1d800, dest, src, &i), //  ec8:	7ea1d800 	frsqrte	s0, s0
        Vrsqrte(F64, V64, dest, src) => vgen2(code, 0x7ee1d800, dest, src, &i), //  ed0:	7ee1d800 	frsqrte	d0, d0
        Vrsqrte(F32, V64, dest, src) => vgen2(code, 0x2ea1d800, dest, src, &i), //  ed8:	2ea1d800 	frsqrte	v0.2s, v0.2s
        Vrsqrte(F32, V128, dest, src) => vgen2(code, 0x6ea1d800, dest, src, &i), //  ee0:	6ea1d800 	frsqrte	v0.4s, v0.4s
        Vrsqrte(F64, V128, dest, src) => vgen2(code, 0x6ee1d800, dest, src, &i), //  ee8:	6ee1d800 	frsqrte	v0.2d, v0.2d
        _ => Err(Error::UnsupportedVectorOperation(i.clone()))
    }
}
